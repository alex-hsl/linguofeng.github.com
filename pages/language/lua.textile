---
layout: default
title: Lua
description: 运行于JVM虚拟机的语言，能够与JAVA相互调用！！
navigation: [1.安装, 2.HelloWorld, 3.函数]
---

<section id="1">
    <div class="page-header">
        <h3>一、安装 <small>环境：Ubuntu 12.10</small></h3>
    </div>
<pre>
$ sudo apt-get install lua5.2
$ lua -v
</pre>
<pre>
Lua 5.2.1  Copyright (C) 1994-2012 Lua.org, PUC-Rio
</pre>
</section>

<section id="2">
    <div class="page-header">
        <h3>二、HelloWorld</h3>
    </div>
<pre>
$ lua
> print("Hello World!!")
</pre>
<pre>
Hello World!!
</pre>
</section>

<section id="3">
    <div class="page-header">
        <h3>三、函数</h3>
    </div>
<pre class="">
function add(x, y)          // 定义一个函数add，并接收两个参数
    local a = x + y         // 定义一个局部变量a，接收x+y的和，局部变量仅在函数add中有效
    return a                // 返回
end                         // 结束add函数

print(add(15, 64));         // 打印add(15, 64)的结果
</pre>
</section>

<section id="4">
    <div class="page-header">
        <h3>四、控制语句</h3>
    </div>
<pre>
for int i = 0, 10, 2 do     // for循环，2表示步长，省略时为1
    print("i = " .. i)      // .. 表示字符串连接符
end                         // 结束for

if a > b then               // if条件判断语句
    print("a > b")
else
    print("b > a")
end
</pre>
</section>

<section id="5">
    <div class="page-header">
        <h3>五、数据结构 <small>table</small></h3>
    </div>
<pre>
arrays = {}                         // 数组
arrays[0] = "abc"
arrays[1] = 123

arrays["key"] = "value"             // map

for key, value in pairs(arrays) do  // 迭代table
    print(key .. " = " .. value)
end
</pre>
</section>
